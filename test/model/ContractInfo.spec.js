/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BeezUpApi);
  }
}(this, function(expect, BeezUpApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BeezUpApi.ContractInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ContractInfo', function() {
    it('should create an instance of ContractInfo', function() {
      // uncomment below and update the code to test ContractInfo
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be.a(BeezUpApi.ContractInfo);
    });

    it('should have the property trialPeriodInMonth (base name: "trialPeriodInMonth")', function() {
      // uncomment below and update the code to test the property trialPeriodInMonth
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property billingPeriodPercentDiscount (base name: "billingPeriodPercentDiscount")', function() {
      // uncomment below and update the code to test the property billingPeriodPercentDiscount
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property discountDurationInMonth (base name: "discountDurationInMonth")', function() {
      // uncomment below and update the code to test the property discountDurationInMonth
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property percentDiscount (base name: "percentDiscount")', function() {
      // uncomment below and update the code to test the property percentDiscount
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property offerId (base name: "offerId")', function() {
      // uncomment below and update the code to test the property offerId
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property storeCount (base name: "storeCount")', function() {
      // uncomment below and update the code to test the property storeCount
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property startUtcDate (base name: "startUtcDate")', function() {
      // uncomment below and update the code to test the property startUtcDate
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property commitmentCalculatedFinishUtcDate (base name: "commitmentCalculatedFinishUtcDate")', function() {
      // uncomment below and update the code to test the property commitmentCalculatedFinishUtcDate
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property billingPeriodInMonth (base name: "billingPeriodInMonth")', function() {
      // uncomment below and update the code to test the property billingPeriodInMonth
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property fixedPrice (base name: "fixedPrice")', function() {
      // uncomment below and update the code to test the property fixedPrice
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property offerName (base name: "offerName")', function() {
      // uncomment below and update the code to test the property offerName
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "currencyCode")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property contractId (base name: "contractId")', function() {
      // uncomment below and update the code to test the property contractId
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property commitmentPeriodInMonth (base name: "commitmentPeriodInMonth")', function() {
      // uncomment below and update the code to test the property commitmentPeriodInMonth
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property clickIncluded (base name: "clickIncluded")', function() {
      // uncomment below and update the code to test the property clickIncluded
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property additionalClickPrice (base name: "additionalClickPrice")', function() {
      // uncomment below and update the code to test the property additionalClickPrice
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property ipUserCreation (base name: "ipUserCreation")', function() {
      // uncomment below and update the code to test the property ipUserCreation
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property ipUserModification (base name: "ipUserModification")', function() {
      // uncomment below and update the code to test the property ipUserModification
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property fixedAndVariableClickInfo (base name: "fixedAndVariableClickInfo")', function() {
      // uncomment below and update the code to test the property fixedAndVariableClickInfo
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property variableModelInfo (base name: "variableModelInfo")', function() {
      // uncomment below and update the code to test the property variableModelInfo
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property isCommitmentRenewalAutomatically (base name: "isCommitmentRenewalAutomatically")', function() {
      // uncomment below and update the code to test the property isCommitmentRenewalAutomatically
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property discountEndUtcDate (base name: "discountEndUtcDate")', function() {
      // uncomment below and update the code to test the property discountEndUtcDate
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

    it('should have the property isModifiableContract (base name: "isModifiableContract")', function() {
      // uncomment below and update the code to test the property isModifiableContract
      //var instane = new BeezUpApi.ContractInfo();
      //expect(instance).to.be();
    });

  });

}));
