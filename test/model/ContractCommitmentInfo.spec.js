/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BeezUpApi);
  }
}(this, function(expect, BeezUpApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BeezUpApi.ContractCommitmentInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ContractCommitmentInfo', function() {
    it('should create an instance of ContractCommitmentInfo', function() {
      // uncomment below and update the code to test ContractCommitmentInfo
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be.a(BeezUpApi.ContractCommitmentInfo);
    });

    it('should have the property commitmentCalculatedFinishDate (base name: "commitmentCalculatedFinishDate")', function() {
      // uncomment below and update the code to test the property commitmentCalculatedFinishDate
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property newContractStartDate (base name: "newContractStartDate")', function() {
      // uncomment below and update the code to test the property newContractStartDate
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property commitmentPeriodInMonth (base name: "commitmentPeriodInMonth")', function() {
      // uncomment below and update the code to test the property commitmentPeriodInMonth
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property trialPeriodInMonth (base name: "trialPeriodInMonth")', function() {
      // uncomment below and update the code to test the property trialPeriodInMonth
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property trialPeriodFinishDate (base name: "trialPeriodFinishDate")', function() {
      // uncomment below and update the code to test the property trialPeriodFinishDate
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property paymentDelayInDays (base name: "paymentDelayInDays")', function() {
      // uncomment below and update the code to test the property paymentDelayInDays
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property offerId (base name: "offerId")', function() {
      // uncomment below and update the code to test the property offerId
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property offerName (base name: "offerName")', function() {
      // uncomment below and update the code to test the property offerName
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property currentContractId (base name: "currentContractId")', function() {
      // uncomment below and update the code to test the property currentContractId
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property commercialUserId (base name: "commercialUserId")', function() {
      // uncomment below and update the code to test the property commercialUserId
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property model (base name: "model")', function() {
      // uncomment below and update the code to test the property model
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property currentContractTerminationDate (base name: "currentContractTerminationDate")', function() {
      // uncomment below and update the code to test the property currentContractTerminationDate
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property requestedPaymentMethod (base name: "requestedPaymentMethod")', function() {
      // uncomment below and update the code to test the property requestedPaymentMethod
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property currentCustomerPaymentMethod (base name: "currentCustomerPaymentMethod")', function() {
      // uncomment below and update the code to test the property currentCustomerPaymentMethod
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property contractType (base name: "contractType")', function() {
      // uncomment below and update the code to test the property contractType
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property isModelMustBeTransmittedInNewContract (base name: "isModelMustBeTransmittedInNewContract")', function() {
      // uncomment below and update the code to test the property isModelMustBeTransmittedInNewContract
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property fixedAndVariableClickInfo (base name: "fixedAndVariableClickInfo")', function() {
      // uncomment below and update the code to test the property fixedAndVariableClickInfo
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property variableModelInfo (base name: "variableModelInfo")', function() {
      // uncomment below and update the code to test the property variableModelInfo
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethodAuthorized (base name: "paymentMethodAuthorized")', function() {
      // uncomment below and update the code to test the property paymentMethodAuthorized
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property couponOfferCode (base name: "couponOfferCode")', function() {
      // uncomment below and update the code to test the property couponOfferCode
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property commercialCreatorUserId (base name: "commercialCreatorUserId")', function() {
      // uncomment below and update the code to test the property commercialCreatorUserId
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property minBillingPeriodInMonths (base name: "minBillingPeriodInMonths")', function() {
      // uncomment below and update the code to test the property minBillingPeriodInMonths
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

    it('should have the property isCustomerWantsToTerminateHisContract (base name: "isCustomerWantsToTerminateHisContract")', function() {
      // uncomment below and update the code to test the property isCustomerWantsToTerminateHisContract
      //var instane = new BeezUpApi.ContractCommitmentInfo();
      //expect(instance).to.be();
    });

  });

}));
