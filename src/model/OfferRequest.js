/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BillingPeriodInMonth', 'model/CouponDiscountCode', 'model/CouponOfferCode', 'model/OfferId', 'model/StoreCount'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BillingPeriodInMonth'), require('./CouponDiscountCode'), require('./CouponOfferCode'), require('./OfferId'), require('./StoreCount'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.OfferRequest = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.BillingPeriodInMonth, root.BeezUpApi.CouponDiscountCode, root.BeezUpApi.CouponOfferCode, root.BeezUpApi.OfferId, root.BeezUpApi.StoreCount);
  }
}(this, function(ApiClient, BillingPeriodInMonth, CouponDiscountCode, CouponOfferCode, OfferId, StoreCount) {
  'use strict';




  /**
   * The OfferRequest model module.
   * @module model/OfferRequest
   * @version 2.0
   */

  /**
   * Constructs a new <code>OfferRequest</code>.
   * @alias module:model/OfferRequest
   * @class
   * @param offerId {module:model/OfferId} 
   * @param storeCount {module:model/StoreCount} 
   * @param billingPeriodInMonth {module:model/BillingPeriodInMonth} 
   */
  var exports = function(offerId, storeCount, billingPeriodInMonth) {
    var _this = this;

    _this['offerId'] = offerId;
    _this['storeCount'] = storeCount;


    _this['billingPeriodInMonth'] = billingPeriodInMonth;
  };

  /**
   * Constructs a <code>OfferRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OfferRequest} obj Optional instance to populate.
   * @return {module:model/OfferRequest} The populated <code>OfferRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('offerId')) {
        obj['offerId'] = OfferId.constructFromObject(data['offerId']);
      }
      if (data.hasOwnProperty('storeCount')) {
        obj['storeCount'] = StoreCount.constructFromObject(data['storeCount']);
      }
      if (data.hasOwnProperty('couponDiscountCode')) {
        obj['couponDiscountCode'] = CouponDiscountCode.constructFromObject(data['couponDiscountCode']);
      }
      if (data.hasOwnProperty('couponOfferCode')) {
        obj['couponOfferCode'] = CouponOfferCode.constructFromObject(data['couponOfferCode']);
      }
      if (data.hasOwnProperty('billingPeriodInMonth')) {
        obj['billingPeriodInMonth'] = BillingPeriodInMonth.constructFromObject(data['billingPeriodInMonth']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/OfferId} offerId
   */
  exports.prototype['offerId'] = undefined;
  /**
   * @member {module:model/StoreCount} storeCount
   */
  exports.prototype['storeCount'] = undefined;
  /**
   * @member {module:model/CouponDiscountCode} couponDiscountCode
   */
  exports.prototype['couponDiscountCode'] = undefined;
  /**
   * @member {module:model/CouponOfferCode} couponOfferCode
   */
  exports.prototype['couponOfferCode'] = undefined;
  /**
   * @member {module:model/BillingPeriodInMonth} billingPeriodInMonth
   */
  exports.prototype['billingPeriodInMonth'] = undefined;



  return exports;
}));


