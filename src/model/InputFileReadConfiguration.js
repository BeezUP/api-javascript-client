/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FileFormatStrategy', 'model/InputFileReadCsvConfiguration', 'model/InputFileReadXmlConfiguration'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./FileFormatStrategy'), require('./InputFileReadCsvConfiguration'), require('./InputFileReadXmlConfiguration'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.InputFileReadConfiguration = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.FileFormatStrategy, root.BeezUpApi.InputFileReadCsvConfiguration, root.BeezUpApi.InputFileReadXmlConfiguration);
  }
}(this, function(ApiClient, FileFormatStrategy, InputFileReadCsvConfiguration, InputFileReadXmlConfiguration) {
  'use strict';




  /**
   * The InputFileReadConfiguration model module.
   * @module model/InputFileReadConfiguration
   * @version 2.0
   */

  /**
   * Constructs a new <code>InputFileReadConfiguration</code>.
   * Describe how to read the file. If FileFormatStrategy is CSV, csvFileReadProperties is required. Otherwise the xmlFileReadProperties is required. 
   * @alias module:model/InputFileReadConfiguration
   * @class
   * @param format {module:model/FileFormatStrategy} 
   */
  var exports = function(format) {
    var _this = this;

    _this['format'] = format;




  };

  /**
   * Constructs a <code>InputFileReadConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InputFileReadConfiguration} obj Optional instance to populate.
   * @return {module:model/InputFileReadConfiguration} The populated <code>InputFileReadConfiguration</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('format')) {
        obj['format'] = FileFormatStrategy.constructFromObject(data['format']);
      }
      if (data.hasOwnProperty('encodingTypeName')) {
        obj['encodingTypeName'] = ApiClient.convertToType(data['encodingTypeName'], 'String');
      }
      if (data.hasOwnProperty('cultureName')) {
        obj['cultureName'] = ApiClient.convertToType(data['cultureName'], 'String');
      }
      if (data.hasOwnProperty('csvFileReadProperties')) {
        obj['csvFileReadProperties'] = InputFileReadCsvConfiguration.constructFromObject(data['csvFileReadProperties']);
      }
      if (data.hasOwnProperty('xmlFileReadProperties')) {
        obj['xmlFileReadProperties'] = InputFileReadXmlConfiguration.constructFromObject(data['xmlFileReadProperties']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/FileFormatStrategy} format
   */
  exports.prototype['format'] = undefined;
  /**
   * The encoding type. UTF-8 by default.
   * @member {String} encodingTypeName
   * @default 'UTF-8'
   */
  exports.prototype['encodingTypeName'] = 'UTF-8';
  /**
   * The culture name of the file.  (i.e. fr-FR). If null then Invariant culture will be used.
   * @member {String} cultureName
   * @default ''
   */
  exports.prototype['cultureName'] = '';
  /**
   * @member {module:model/InputFileReadCsvConfiguration} csvFileReadProperties
   */
  exports.prototype['csvFileReadProperties'] = undefined;
  /**
   * @member {module:model/InputFileReadXmlConfiguration} xmlFileReadProperties
   */
  exports.prototype['xmlFileReadProperties'] = undefined;



  return exports;
}));


