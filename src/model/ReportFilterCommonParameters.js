/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BeezUPCommonChannelId', 'model/ReportAdvancedFilters', 'model/ReportCategoryFilter', 'model/ReportIndicatorFilter'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BeezUPCommonChannelId'), require('./ReportAdvancedFilters'), require('./ReportCategoryFilter'), require('./ReportIndicatorFilter'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.ReportFilterCommonParameters = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.BeezUPCommonChannelId, root.BeezUpApi.ReportAdvancedFilters, root.BeezUpApi.ReportCategoryFilter, root.BeezUpApi.ReportIndicatorFilter);
  }
}(this, function(ApiClient, BeezUPCommonChannelId, ReportAdvancedFilters, ReportCategoryFilter, ReportIndicatorFilter) {
  'use strict';




  /**
   * The ReportFilterCommonParameters model module.
   * @module model/ReportFilterCommonParameters
   * @version 2.0
   */

  /**
   * Constructs a new <code>ReportFilterCommonParameters</code>.
   * Contains common filter parameters
   * @alias module:model/ReportFilterCommonParameters
   * @class
   * @param beginPeriodUtcDate {Date} The begin date period you want to get the report
   * @param endPeriodUtcDate {Date} The end date period you want to get the report.
   * @param advancedFilters {module:model/ReportAdvancedFilters} 
   */
  var exports = function(beginPeriodUtcDate, endPeriodUtcDate, advancedFilters) {
    var _this = this;


    _this['beginPeriodUtcDate'] = beginPeriodUtcDate;
    _this['endPeriodUtcDate'] = endPeriodUtcDate;


    _this['advancedFilters'] = advancedFilters;
  };

  /**
   * Constructs a <code>ReportFilterCommonParameters</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ReportFilterCommonParameters} obj Optional instance to populate.
   * @return {module:model/ReportFilterCommonParameters} The populated <code>ReportFilterCommonParameters</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('channelId')) {
        obj['channelId'] = BeezUPCommonChannelId.constructFromObject(data['channelId']);
      }
      if (data.hasOwnProperty('beginPeriodUtcDate')) {
        obj['beginPeriodUtcDate'] = ApiClient.convertToType(data['beginPeriodUtcDate'], 'Date');
      }
      if (data.hasOwnProperty('endPeriodUtcDate')) {
        obj['endPeriodUtcDate'] = ApiClient.convertToType(data['endPeriodUtcDate'], 'Date');
      }
      if (data.hasOwnProperty('categoryFilter')) {
        obj['categoryFilter'] = ReportCategoryFilter.constructFromObject(data['categoryFilter']);
      }
      if (data.hasOwnProperty('indicatorFilters')) {
        obj['indicatorFilters'] = ApiClient.convertToType(data['indicatorFilters'], [ReportIndicatorFilter]);
      }
      if (data.hasOwnProperty('advancedFilters')) {
        obj['advancedFilters'] = ReportAdvancedFilters.constructFromObject(data['advancedFilters']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/BeezUPCommonChannelId} channelId
   */
  exports.prototype['channelId'] = undefined;
  /**
   * The begin date period you want to get the report
   * @member {Date} beginPeriodUtcDate
   */
  exports.prototype['beginPeriodUtcDate'] = undefined;
  /**
   * The end date period you want to get the report.
   * @member {Date} endPeriodUtcDate
   */
  exports.prototype['endPeriodUtcDate'] = undefined;
  /**
   * @member {module:model/ReportCategoryFilter} categoryFilter
   */
  exports.prototype['categoryFilter'] = undefined;
  /**
   * @member {Array.<module:model/ReportIndicatorFilter>} indicatorFilters
   */
  exports.prototype['indicatorFilters'] = undefined;
  /**
   * @member {module:model/ReportAdvancedFilters} advancedFilters
   */
  exports.prototype['advancedFilters'] = undefined;



  return exports;
}));


