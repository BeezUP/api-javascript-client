/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BeezUPCommonDocUrl', 'model/BeezUPCommonUserErrorMessageArguments'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BeezUPCommonDocUrl'), require('./BeezUPCommonUserErrorMessageArguments'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.BeezUPCommonUserErrorMessage = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.BeezUPCommonDocUrl, root.BeezUpApi.BeezUPCommonUserErrorMessageArguments);
  }
}(this, function(ApiClient, BeezUPCommonDocUrl, BeezUPCommonUserErrorMessageArguments) {
  'use strict';




  /**
   * The BeezUPCommonUserErrorMessage model module.
   * @module model/BeezUPCommonUserErrorMessage
   * @version 2.0
   */

  /**
   * Constructs a new <code>BeezUPCommonUserErrorMessage</code>.
   * @alias module:model/BeezUPCommonUserErrorMessage
   * @class
   * @param code {String} the error code. The error code can be a pattern containing the argument's name
   * @param message {String} The error message
   */
  var exports = function(code, message) {
    var _this = this;


    _this['code'] = code;
    _this['message'] = message;


  };

  /**
   * Constructs a <code>BeezUPCommonUserErrorMessage</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BeezUPCommonUserErrorMessage} obj Optional instance to populate.
   * @return {module:model/BeezUPCommonUserErrorMessage} The populated <code>BeezUPCommonUserErrorMessage</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('docUrl')) {
        obj['docUrl'] = BeezUPCommonDocUrl.constructFromObject(data['docUrl']);
      }
      if (data.hasOwnProperty('code')) {
        obj['code'] = ApiClient.convertToType(data['code'], 'String');
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('cultureName')) {
        obj['cultureName'] = ApiClient.convertToType(data['cultureName'], 'String');
      }
      if (data.hasOwnProperty('arguments')) {
        obj['arguments'] = ApiClient.convertToType(data['arguments'], [BeezUPCommonUserErrorMessageArguments]);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/BeezUPCommonDocUrl} docUrl
   */
  exports.prototype['docUrl'] = undefined;
  /**
   * the error code. The error code can be a pattern containing the argument's name
   * @member {String} code
   */
  exports.prototype['code'] = undefined;
  /**
   * The error message
   * @member {String} message
   */
  exports.prototype['message'] = undefined;
  /**
   * If the error is translated, the culture name will be indicated
   * @member {String} cultureName
   */
  exports.prototype['cultureName'] = undefined;
  /**
   * a dictionary string/object
   * @member {Array.<module:model/BeezUPCommonUserErrorMessageArguments>} arguments
   */
  exports.prototype['arguments'] = undefined;



  return exports;
}));


