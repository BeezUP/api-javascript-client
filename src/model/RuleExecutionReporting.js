/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/OptimisationActionName', 'model/RuleExecutionReportingErrorType', 'model/RuleExecutionReportingExecutionSource', 'model/RuleExecutionReportingLinks', 'model/RuleExecutionReportingStatus'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./OptimisationActionName'), require('./RuleExecutionReportingErrorType'), require('./RuleExecutionReportingExecutionSource'), require('./RuleExecutionReportingLinks'), require('./RuleExecutionReportingStatus'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.RuleExecutionReporting = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.OptimisationActionName, root.BeezUpApi.RuleExecutionReportingErrorType, root.BeezUpApi.RuleExecutionReportingExecutionSource, root.BeezUpApi.RuleExecutionReportingLinks, root.BeezUpApi.RuleExecutionReportingStatus);
  }
}(this, function(ApiClient, OptimisationActionName, RuleExecutionReportingErrorType, RuleExecutionReportingExecutionSource, RuleExecutionReportingLinks, RuleExecutionReportingStatus) {
  'use strict';




  /**
   * The RuleExecutionReporting model module.
   * @module model/RuleExecutionReporting
   * @version 2.0
   */

  /**
   * Constructs a new <code>RuleExecutionReporting</code>.
   * @alias module:model/RuleExecutionReporting
   * @class
   * @param ruleId {String} The rule identifier
   * @param ruleName {String} The name of the rule
   * @param status {module:model/RuleExecutionReportingStatus} 
   * @param executionSource {module:model/RuleExecutionReportingExecutionSource} 
   */
  var exports = function(ruleId, ruleName, status, executionSource) {
    var _this = this;

    _this['ruleId'] = ruleId;
    _this['ruleName'] = ruleName;


    _this['status'] = status;






    _this['executionSource'] = executionSource;


  };

  /**
   * Constructs a <code>RuleExecutionReporting</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RuleExecutionReporting} obj Optional instance to populate.
   * @return {module:model/RuleExecutionReporting} The populated <code>RuleExecutionReporting</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('ruleId')) {
        obj['ruleId'] = ApiClient.convertToType(data['ruleId'], 'String');
      }
      if (data.hasOwnProperty('ruleName')) {
        obj['ruleName'] = ApiClient.convertToType(data['ruleName'], 'String');
      }
      if (data.hasOwnProperty('startedUtcDate')) {
        obj['startedUtcDate'] = ApiClient.convertToType(data['startedUtcDate'], 'Date');
      }
      if (data.hasOwnProperty('completedUtcDate')) {
        obj['completedUtcDate'] = ApiClient.convertToType(data['completedUtcDate'], 'Date');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = RuleExecutionReportingStatus.constructFromObject(data['status']);
      }
      if (data.hasOwnProperty('errorType')) {
        obj['errorType'] = RuleExecutionReportingErrorType.constructFromObject(data['errorType']);
      }
      if (data.hasOwnProperty('affectedProductCount')) {
        obj['affectedProductCount'] = ApiClient.convertToType(data['affectedProductCount'], 'Number');
      }
      if (data.hasOwnProperty('activeAffectedProductCount')) {
        obj['activeAffectedProductCount'] = ApiClient.convertToType(data['activeAffectedProductCount'], 'Number');
      }
      if (data.hasOwnProperty('affectedChannelCount')) {
        obj['affectedChannelCount'] = ApiClient.convertToType(data['affectedChannelCount'], 'Number');
      }
      if (data.hasOwnProperty('optimisationActionName')) {
        obj['optimisationActionName'] = OptimisationActionName.constructFromObject(data['optimisationActionName']);
      }
      if (data.hasOwnProperty('userId')) {
        obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
      }
      if (data.hasOwnProperty('executionSource')) {
        obj['executionSource'] = RuleExecutionReportingExecutionSource.constructFromObject(data['executionSource']);
      }
      if (data.hasOwnProperty('reportUrl')) {
        obj['reportUrl'] = ApiClient.convertToType(data['reportUrl'], 'String');
      }
      if (data.hasOwnProperty('links')) {
        obj['links'] = RuleExecutionReportingLinks.constructFromObject(data['links']);
      }
    }
    return obj;
  }

  /**
   * The rule identifier
   * @member {String} ruleId
   */
  exports.prototype['ruleId'] = undefined;
  /**
   * The name of the rule
   * @member {String} ruleName
   */
  exports.prototype['ruleName'] = undefined;
  /**
   * The start utc date of the execution of the rule
   * @member {Date} startedUtcDate
   */
  exports.prototype['startedUtcDate'] = undefined;
  /**
   * The completed utc date of the execution of the rule
   * @member {Date} completedUtcDate
   */
  exports.prototype['completedUtcDate'] = undefined;
  /**
   * @member {module:model/RuleExecutionReportingStatus} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {module:model/RuleExecutionReportingErrorType} errorType
   */
  exports.prototype['errorType'] = undefined;
  /**
   * The count of affected products, active or not
   * @member {Number} affectedProductCount
   */
  exports.prototype['affectedProductCount'] = undefined;
  /**
   * The count of affected active products
   * @member {Number} activeAffectedProductCount
   */
  exports.prototype['activeAffectedProductCount'] = undefined;
  /**
   * The count of affected Channels across all products
   * @member {Number} affectedChannelCount
   */
  exports.prototype['affectedChannelCount'] = undefined;
  /**
   * @member {module:model/OptimisationActionName} optimisationActionName
   */
  exports.prototype['optimisationActionName'] = undefined;
  /**
   * The userId that executed the rule if any
   * @member {String} userId
   */
  exports.prototype['userId'] = undefined;
  /**
   * @member {module:model/RuleExecutionReportingExecutionSource} executionSource
   */
  exports.prototype['executionSource'] = undefined;
  /**
   * The url for the excel report for this execution
   * @member {String} reportUrl
   */
  exports.prototype['reportUrl'] = undefined;
  /**
   * @member {module:model/RuleExecutionReportingLinks} links
   */
  exports.prototype['links'] = undefined;



  return exports;
}));


