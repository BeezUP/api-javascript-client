/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BeezUPCommonChannelBasicInfo', 'model/BeezUPCommonChannelCatalogId', 'model/BeezUPCommonChannelId', 'model/BeezUPCommonChannelName', 'model/BeezUPCommonHttpUrl', 'model/BeezUPCommonLink2', 'model/BeezUPCommonStoreId', 'model/ChannelCatalogState', 'model/ColumnMappingWithNameList', 'model/CostSettings', 'model/ExclusionFilters', 'model/GeneralSettings'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BeezUPCommonChannelBasicInfo'), require('./BeezUPCommonChannelCatalogId'), require('./BeezUPCommonChannelId'), require('./BeezUPCommonChannelName'), require('./BeezUPCommonHttpUrl'), require('./BeezUPCommonLink2'), require('./BeezUPCommonStoreId'), require('./ChannelCatalogState'), require('./ColumnMappingWithNameList'), require('./CostSettings'), require('./ExclusionFilters'), require('./GeneralSettings'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.ChannelCatalog = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.BeezUPCommonChannelBasicInfo, root.BeezUpApi.BeezUPCommonChannelCatalogId, root.BeezUpApi.BeezUPCommonChannelId, root.BeezUpApi.BeezUPCommonChannelName, root.BeezUpApi.BeezUPCommonHttpUrl, root.BeezUpApi.BeezUPCommonLink2, root.BeezUpApi.BeezUPCommonStoreId, root.BeezUpApi.ChannelCatalogState, root.BeezUpApi.ColumnMappingWithNameList, root.BeezUpApi.CostSettings, root.BeezUpApi.ExclusionFilters, root.BeezUpApi.GeneralSettings);
  }
}(this, function(ApiClient, BeezUPCommonChannelBasicInfo, BeezUPCommonChannelCatalogId, BeezUPCommonChannelId, BeezUPCommonChannelName, BeezUPCommonHttpUrl, BeezUPCommonLink2, BeezUPCommonStoreId, ChannelCatalogState, ColumnMappingWithNameList, CostSettings, ExclusionFilters, GeneralSettings) {
  'use strict';




  /**
   * The ChannelCatalog model module.
   * @module model/ChannelCatalog
   * @version 2.0
   */

  /**
   * Constructs a new <code>ChannelCatalog</code>.
   * @alias module:model/ChannelCatalog
   * @class
   * @implements module:model/BeezUPCommonChannelBasicInfo
   * @param channelId {module:model/BeezUPCommonChannelId} 
   * @param channelName {module:model/BeezUPCommonChannelName} 
   * @param channelImageUrl {module:model/BeezUPCommonHttpUrl} 
   * @param productCount {Number} The product count exported considering category mapping. Not all filters have been applied.
   * @param enabled {Boolean} Indicates if the channel catalog is active
   * @param isMarketplace {Boolean} Indicates if this channel catalog is related to a marketplace
   * @param channelCatalogId {module:model/BeezUPCommonChannelCatalogId} 
   * @param storeId {module:model/BeezUPCommonStoreId} 
   * @param generalSettings {module:model/GeneralSettings} 
   * @param costSettings {module:model/CostSettings} 
   * @param state {module:model/ChannelCatalogState} 
   * @param types {Array.<String>} The channel type list related to the channel
   * @param links {Array.<module:model/BeezUPCommonLink2>} Indicates the actions you can do on a channel catalog
   */
  var exports = function(channelId, channelName, channelImageUrl, productCount, enabled, isMarketplace, channelCatalogId, storeId, generalSettings, costSettings, state, types, links) {
    var _this = this;

    BeezUPCommonChannelBasicInfo.call(_this, channelId, channelName, channelImageUrl);
    _this['productCount'] = productCount;
    _this['enabled'] = enabled;
    _this['isMarketplace'] = isMarketplace;
    _this['channelCatalogId'] = channelCatalogId;
    _this['storeId'] = storeId;
    _this['generalSettings'] = generalSettings;
    _this['costSettings'] = costSettings;



    _this['state'] = state;
    _this['types'] = types;
    _this['links'] = links;
  };

  /**
   * Constructs a <code>ChannelCatalog</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChannelCatalog} obj Optional instance to populate.
   * @return {module:model/ChannelCatalog} The populated <code>ChannelCatalog</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      BeezUPCommonChannelBasicInfo.constructFromObject(data, obj);
      if (data.hasOwnProperty('productCount')) {
        obj['productCount'] = ApiClient.convertToType(data['productCount'], 'Number');
      }
      if (data.hasOwnProperty('enabled')) {
        obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
      }
      if (data.hasOwnProperty('isMarketplace')) {
        obj['isMarketplace'] = ApiClient.convertToType(data['isMarketplace'], 'Boolean');
      }
      if (data.hasOwnProperty('channelCatalogId')) {
        obj['channelCatalogId'] = BeezUPCommonChannelCatalogId.constructFromObject(data['channelCatalogId']);
      }
      if (data.hasOwnProperty('storeId')) {
        obj['storeId'] = BeezUPCommonStoreId.constructFromObject(data['storeId']);
      }
      if (data.hasOwnProperty('generalSettings')) {
        obj['generalSettings'] = GeneralSettings.constructFromObject(data['generalSettings']);
      }
      if (data.hasOwnProperty('costSettings')) {
        obj['costSettings'] = CostSettings.constructFromObject(data['costSettings']);
      }
      if (data.hasOwnProperty('columnMappings')) {
        obj['columnMappings'] = ColumnMappingWithNameList.constructFromObject(data['columnMappings']);
      }
      if (data.hasOwnProperty('exclusionFilters')) {
        obj['exclusionFilters'] = ExclusionFilters.constructFromObject(data['exclusionFilters']);
      }
      if (data.hasOwnProperty('exportUrl')) {
        obj['exportUrl'] = BeezUPCommonHttpUrl.constructFromObject(data['exportUrl']);
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = ChannelCatalogState.constructFromObject(data['state']);
      }
      if (data.hasOwnProperty('types')) {
        obj['types'] = ApiClient.convertToType(data['types'], ['String']);
      }
      if (data.hasOwnProperty('links')) {
        obj['links'] = ApiClient.convertToType(data['links'], [BeezUPCommonLink2]);
      }
    }
    return obj;
  }

  /**
   * The product count exported considering category mapping. Not all filters have been applied.
   * @member {Number} productCount
   */
  exports.prototype['productCount'] = undefined;
  /**
   * Indicates if the channel catalog is active
   * @member {Boolean} enabled
   */
  exports.prototype['enabled'] = undefined;
  /**
   * Indicates if this channel catalog is related to a marketplace
   * @member {Boolean} isMarketplace
   */
  exports.prototype['isMarketplace'] = undefined;
  /**
   * @member {module:model/BeezUPCommonChannelCatalogId} channelCatalogId
   */
  exports.prototype['channelCatalogId'] = undefined;
  /**
   * @member {module:model/BeezUPCommonStoreId} storeId
   */
  exports.prototype['storeId'] = undefined;
  /**
   * @member {module:model/GeneralSettings} generalSettings
   */
  exports.prototype['generalSettings'] = undefined;
  /**
   * @member {module:model/CostSettings} costSettings
   */
  exports.prototype['costSettings'] = undefined;
  /**
   * @member {module:model/ColumnMappingWithNameList} columnMappings
   */
  exports.prototype['columnMappings'] = undefined;
  /**
   * @member {module:model/ExclusionFilters} exclusionFilters
   */
  exports.prototype['exclusionFilters'] = undefined;
  /**
   * @member {module:model/BeezUPCommonHttpUrl} exportUrl
   */
  exports.prototype['exportUrl'] = undefined;
  /**
   * @member {module:model/ChannelCatalogState} state
   */
  exports.prototype['state'] = undefined;
  /**
   * The channel type list related to the channel
   * @member {Array.<String>} types
   */
  exports.prototype['types'] = undefined;
  /**
   * Indicates the actions you can do on a channel catalog
   * @member {Array.<module:model/BeezUPCommonLink2>} links
   */
  exports.prototype['links'] = undefined;

  // Implement BeezUPCommonChannelBasicInfo interface:
  /**
   * @member {module:model/BeezUPCommonChannelId} channelId
   */
exports.prototype['channelId'] = undefined;

  /**
   * @member {module:model/BeezUPCommonChannelName} channelName
   */
exports.prototype['channelName'] = undefined;

  /**
   * @member {module:model/BeezUPCommonHttpUrl} channelImageUrl
   */
exports.prototype['channelImageUrl'] = undefined;



  return exports;
}));


