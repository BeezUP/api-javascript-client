/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BeezUPCommonUserErrorMessage', 'model/BeezUPCommonUserId', 'model/ExecutionId'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BeezUPCommonUserErrorMessage'), require('./BeezUPCommonUserId'), require('./ExecutionId'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.ImportationMonitoring = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.BeezUPCommonUserErrorMessage, root.BeezUpApi.BeezUPCommonUserId, root.BeezUpApi.ExecutionId);
  }
}(this, function(ApiClient, BeezUPCommonUserErrorMessage, BeezUPCommonUserId, ExecutionId) {
  'use strict';




  /**
   * The ImportationMonitoring model module.
   * @module model/ImportationMonitoring
   * @version 2.0
   */

  /**
   * Constructs a new <code>ImportationMonitoring</code>.
   * Describe the reporting of the catalog importation
   * @alias module:model/ImportationMonitoring
   * @class
   * @param success {Boolean} Indicates if the importation was successfully completed or not
   * @param executionId {module:model/ExecutionId} 
   * @param lastUpdateUtcDate {Date} The last update of the reporting
   * @param beginUtcDate {Date} The start date of the importation
   * @param steps {Object.<String, Boolean>} Contains all steps of the importation process with a boolean. If true the step has been passed, false the step is not complete
   */
  var exports = function(success, executionId, lastUpdateUtcDate, beginUtcDate, steps) {
    var _this = this;


    _this['success'] = success;
    _this['executionId'] = executionId;
    _this['lastUpdateUtcDate'] = lastUpdateUtcDate;
    _this['beginUtcDate'] = beginUtcDate;

    _this['steps'] = steps;
  };

  /**
   * Constructs a <code>ImportationMonitoring</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ImportationMonitoring} obj Optional instance to populate.
   * @return {module:model/ImportationMonitoring} The populated <code>ImportationMonitoring</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('userId')) {
        obj['userId'] = BeezUPCommonUserId.constructFromObject(data['userId']);
      }
      if (data.hasOwnProperty('success')) {
        obj['success'] = ApiClient.convertToType(data['success'], 'Boolean');
      }
      if (data.hasOwnProperty('executionId')) {
        obj['executionId'] = ExecutionId.constructFromObject(data['executionId']);
      }
      if (data.hasOwnProperty('lastUpdateUtcDate')) {
        obj['lastUpdateUtcDate'] = ApiClient.convertToType(data['lastUpdateUtcDate'], 'Date');
      }
      if (data.hasOwnProperty('beginUtcDate')) {
        obj['beginUtcDate'] = ApiClient.convertToType(data['beginUtcDate'], 'Date');
      }
      if (data.hasOwnProperty('errors')) {
        obj['errors'] = ApiClient.convertToType(data['errors'], [BeezUPCommonUserErrorMessage]);
      }
      if (data.hasOwnProperty('steps')) {
        obj['steps'] = ApiClient.convertToType(data['steps'], {'String': 'Boolean'});
      }
    }
    return obj;
  }

  /**
   * @member {module:model/BeezUPCommonUserId} userId
   */
  exports.prototype['userId'] = undefined;
  /**
   * Indicates if the importation was successfully completed or not
   * @member {Boolean} success
   */
  exports.prototype['success'] = undefined;
  /**
   * @member {module:model/ExecutionId} executionId
   */
  exports.prototype['executionId'] = undefined;
  /**
   * The last update of the reporting
   * @member {Date} lastUpdateUtcDate
   */
  exports.prototype['lastUpdateUtcDate'] = undefined;
  /**
   * The start date of the importation
   * @member {Date} beginUtcDate
   */
  exports.prototype['beginUtcDate'] = undefined;
  /**
   * In case of error a description will be indicated
   * @member {Array.<module:model/BeezUPCommonUserErrorMessage>} errors
   */
  exports.prototype['errors'] = undefined;
  /**
   * Contains all steps of the importation process with a boolean. If true the step has been passed, false the step is not complete
   * @member {Object.<String, Boolean>} steps
   */
  exports.prototype['steps'] = undefined;



  return exports;
}));


