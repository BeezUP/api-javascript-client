/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LinkClickToOrderType', 'model/MargingType', 'model/PerformanceIndicatorFormula'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./LinkClickToOrderType'), require('./MargingType'), require('./PerformanceIndicatorFormula'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.ReportAdvancedFilters = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.LinkClickToOrderType, root.BeezUpApi.MargingType, root.BeezUpApi.PerformanceIndicatorFormula);
  }
}(this, function(ApiClient, LinkClickToOrderType, MargingType, PerformanceIndicatorFormula) {
  'use strict';




  /**
   * The ReportAdvancedFilters model module.
   * @module model/ReportAdvancedFilters
   * @version 2.0
   */

  /**
   * Constructs a new <code>ReportAdvancedFilters</code>.
   * @alias module:model/ReportAdvancedFilters
   * @class
   * @param margingType {module:model/MargingType} 
   * @param linkClickToOrderType {module:model/LinkClickToOrderType} 
   * @param onlyPaymentValidatedOrders {Boolean} If true, you will get the only the orders with payment validated. Otherwise, you will get all orders validated or not.
   * @param onlyDirectSales {Boolean} If true, you will get only direct sales. Otherwise the indirect sales will be included.
   * @param performanceIndicatorFormula {module:model/PerformanceIndicatorFormula} 
   */
  var exports = function(margingType, linkClickToOrderType, onlyPaymentValidatedOrders, onlyDirectSales, performanceIndicatorFormula) {
    var _this = this;

    _this['margingType'] = margingType;

    _this['linkClickToOrderType'] = linkClickToOrderType;

    _this['onlyPaymentValidatedOrders'] = onlyPaymentValidatedOrders;
    _this['onlyDirectSales'] = onlyDirectSales;
    _this['performanceIndicatorFormula'] = performanceIndicatorFormula;
  };

  /**
   * Constructs a <code>ReportAdvancedFilters</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ReportAdvancedFilters} obj Optional instance to populate.
   * @return {module:model/ReportAdvancedFilters} The populated <code>ReportAdvancedFilters</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('margingType')) {
        obj['margingType'] = MargingType.constructFromObject(data['margingType']);
      }
      if (data.hasOwnProperty('globalMarginPercent')) {
        obj['globalMarginPercent'] = ApiClient.convertToType(data['globalMarginPercent'], 'Number');
      }
      if (data.hasOwnProperty('linkClickToOrderType')) {
        obj['linkClickToOrderType'] = LinkClickToOrderType.constructFromObject(data['linkClickToOrderType']);
      }
      if (data.hasOwnProperty('linkClickToOrderMaxDay')) {
        obj['linkClickToOrderMaxDay'] = ApiClient.convertToType(data['linkClickToOrderMaxDay'], 'Number');
      }
      if (data.hasOwnProperty('onlyPaymentValidatedOrders')) {
        obj['onlyPaymentValidatedOrders'] = ApiClient.convertToType(data['onlyPaymentValidatedOrders'], 'Boolean');
      }
      if (data.hasOwnProperty('onlyDirectSales')) {
        obj['onlyDirectSales'] = ApiClient.convertToType(data['onlyDirectSales'], 'Boolean');
      }
      if (data.hasOwnProperty('performanceIndicatorFormula')) {
        obj['performanceIndicatorFormula'] = PerformanceIndicatorFormula.constructFromObject(data['performanceIndicatorFormula']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/MargingType} margingType
   */
  exports.prototype['margingType'] = undefined;
  /**
   * If the margin type is 'Global', indicate the percentage of sale price.
   * @member {Number} globalMarginPercent
   */
  exports.prototype['globalMarginPercent'] = undefined;
  /**
   * @member {module:model/LinkClickToOrderType} linkClickToOrderType
   */
  exports.prototype['linkClickToOrderType'] = undefined;
  /**
   * If the linkOrderType is OnClickDate, indicate the max day to search the click from the order
   * @member {Number} linkClickToOrderMaxDay
   */
  exports.prototype['linkClickToOrderMaxDay'] = undefined;
  /**
   * If true, you will get the only the orders with payment validated. Otherwise, you will get all orders validated or not.
   * @member {Boolean} onlyPaymentValidatedOrders
   * @default false
   */
  exports.prototype['onlyPaymentValidatedOrders'] = false;
  /**
   * If true, you will get only direct sales. Otherwise the indirect sales will be included.
   * @member {Boolean} onlyDirectSales
   * @default false
   */
  exports.prototype['onlyDirectSales'] = false;
  /**
   * @member {module:model/PerformanceIndicatorFormula} performanceIndicatorFormula
   */
  exports.prototype['performanceIndicatorFormula'] = undefined;



  return exports;
}));


