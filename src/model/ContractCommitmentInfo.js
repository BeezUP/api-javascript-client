/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CouponOfferCode', 'model/FixedAndVariableClickModelInfo', 'model/OfferId', 'model/PaymentMethod', 'model/VariableModelInfo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CouponOfferCode'), require('./FixedAndVariableClickModelInfo'), require('./OfferId'), require('./PaymentMethod'), require('./VariableModelInfo'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.ContractCommitmentInfo = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.CouponOfferCode, root.BeezUpApi.FixedAndVariableClickModelInfo, root.BeezUpApi.OfferId, root.BeezUpApi.PaymentMethod, root.BeezUpApi.VariableModelInfo);
  }
}(this, function(ApiClient, CouponOfferCode, FixedAndVariableClickModelInfo, OfferId, PaymentMethod, VariableModelInfo) {
  'use strict';




  /**
   * The ContractCommitmentInfo model module.
   * @module model/ContractCommitmentInfo
   * @version 2.0
   */

  /**
   * Constructs a new <code>ContractCommitmentInfo</code>.
   * Describe the commitment information related to the offer.
   * @alias module:model/ContractCommitmentInfo
   * @class
   */
  var exports = function() {
    var _this = this;
























  };

  /**
   * Constructs a <code>ContractCommitmentInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ContractCommitmentInfo} obj Optional instance to populate.
   * @return {module:model/ContractCommitmentInfo} The populated <code>ContractCommitmentInfo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('commitmentCalculatedFinishDate')) {
        obj['commitmentCalculatedFinishDate'] = ApiClient.convertToType(data['commitmentCalculatedFinishDate'], 'Date');
      }
      if (data.hasOwnProperty('newContractStartDate')) {
        obj['newContractStartDate'] = ApiClient.convertToType(data['newContractStartDate'], 'Date');
      }
      if (data.hasOwnProperty('commitmentPeriodInMonth')) {
        obj['commitmentPeriodInMonth'] = ApiClient.convertToType(data['commitmentPeriodInMonth'], 'Number');
      }
      if (data.hasOwnProperty('trialPeriodInMonth')) {
        obj['trialPeriodInMonth'] = ApiClient.convertToType(data['trialPeriodInMonth'], 'Number');
      }
      if (data.hasOwnProperty('trialPeriodFinishDate')) {
        obj['trialPeriodFinishDate'] = ApiClient.convertToType(data['trialPeriodFinishDate'], 'Date');
      }
      if (data.hasOwnProperty('paymentDelayInDays')) {
        obj['paymentDelayInDays'] = ApiClient.convertToType(data['paymentDelayInDays'], 'Number');
      }
      if (data.hasOwnProperty('offerId')) {
        obj['offerId'] = OfferId.constructFromObject(data['offerId']);
      }
      if (data.hasOwnProperty('offerName')) {
        obj['offerName'] = ApiClient.convertToType(data['offerName'], 'String');
      }
      if (data.hasOwnProperty('currentContractId')) {
        obj['currentContractId'] = ApiClient.convertToType(data['currentContractId'], 'String');
      }
      if (data.hasOwnProperty('commercialUserId')) {
        obj['commercialUserId'] = ApiClient.convertToType(data['commercialUserId'], 'String');
      }
      if (data.hasOwnProperty('model')) {
        obj['model'] = ApiClient.convertToType(data['model'], 'String');
      }
      if (data.hasOwnProperty('currentContractTerminationDate')) {
        obj['currentContractTerminationDate'] = ApiClient.convertToType(data['currentContractTerminationDate'], 'Date');
      }
      if (data.hasOwnProperty('requestedPaymentMethod')) {
        obj['requestedPaymentMethod'] = PaymentMethod.constructFromObject(data['requestedPaymentMethod']);
      }
      if (data.hasOwnProperty('currentCustomerPaymentMethod')) {
        obj['currentCustomerPaymentMethod'] = PaymentMethod.constructFromObject(data['currentCustomerPaymentMethod']);
      }
      if (data.hasOwnProperty('contractType')) {
        obj['contractType'] = ApiClient.convertToType(data['contractType'], 'Number');
      }
      if (data.hasOwnProperty('isModelMustBeTransmittedInNewContract')) {
        obj['isModelMustBeTransmittedInNewContract'] = ApiClient.convertToType(data['isModelMustBeTransmittedInNewContract'], 'Boolean');
      }
      if (data.hasOwnProperty('fixedAndVariableClickInfo')) {
        obj['fixedAndVariableClickInfo'] = FixedAndVariableClickModelInfo.constructFromObject(data['fixedAndVariableClickInfo']);
      }
      if (data.hasOwnProperty('variableModelInfo')) {
        obj['variableModelInfo'] = VariableModelInfo.constructFromObject(data['variableModelInfo']);
      }
      if (data.hasOwnProperty('paymentMethodAuthorized')) {
        obj['paymentMethodAuthorized'] = PaymentMethod.constructFromObject(data['paymentMethodAuthorized']);
      }
      if (data.hasOwnProperty('couponOfferCode')) {
        obj['couponOfferCode'] = CouponOfferCode.constructFromObject(data['couponOfferCode']);
      }
      if (data.hasOwnProperty('commercialCreatorUserId')) {
        obj['commercialCreatorUserId'] = ApiClient.convertToType(data['commercialCreatorUserId'], 'String');
      }
      if (data.hasOwnProperty('minBillingPeriodInMonths')) {
        obj['minBillingPeriodInMonths'] = ApiClient.convertToType(data['minBillingPeriodInMonths'], 'Number');
      }
      if (data.hasOwnProperty('isCustomerWantsToTerminateHisContract')) {
        obj['isCustomerWantsToTerminateHisContract'] = ApiClient.convertToType(data['isCustomerWantsToTerminateHisContract'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * The commitment end date related to the offer
   * @member {Date} commitmentCalculatedFinishDate
   */
  exports.prototype['commitmentCalculatedFinishDate'] = undefined;
  /**
   * The start date related to the offer
   * @member {Date} newContractStartDate
   */
  exports.prototype['newContractStartDate'] = undefined;
  /**
   * The commitment period in month related to the offer
   * @member {Number} commitmentPeriodInMonth
   */
  exports.prototype['commitmentPeriodInMonth'] = undefined;
  /**
   * The trial period in month related to the offer
   * @member {Number} trialPeriodInMonth
   */
  exports.prototype['trialPeriodInMonth'] = undefined;
  /**
   * The trial period end date related to the offer
   * @member {Date} trialPeriodFinishDate
   */
  exports.prototype['trialPeriodFinishDate'] = undefined;
  /**
   * The payment delay in days related to the offer
   * @member {Number} paymentDelayInDays
   */
  exports.prototype['paymentDelayInDays'] = undefined;
  /**
   * @member {module:model/OfferId} offerId
   */
  exports.prototype['offerId'] = undefined;
  /**
   * The offer Name
   * @member {String} offerName
   */
  exports.prototype['offerName'] = undefined;
  /**
   * Your current contract id
   * @member {String} currentContractId
   */
  exports.prototype['currentContractId'] = undefined;
  /**
   * Your current commercial user id
   * @member {String} commercialUserId
   */
  exports.prototype['commercialUserId'] = undefined;
  /**
   * Interal usage: Old offer type. The model description
   * @member {String} model
   */
  exports.prototype['model'] = undefined;
  /**
   * The current contract termination date
   * @member {Date} currentContractTerminationDate
   */
  exports.prototype['currentContractTerminationDate'] = undefined;
  /**
   * @member {module:model/PaymentMethod} requestedPaymentMethod
   */
  exports.prototype['requestedPaymentMethod'] = undefined;
  /**
   * @member {module:model/PaymentMethod} currentCustomerPaymentMethod
   */
  exports.prototype['currentCustomerPaymentMethod'] = undefined;
  /**
   * Internal usage: Old offer type. Your contract type
   * @member {Number} contractType
   */
  exports.prototype['contractType'] = undefined;
  /**
   * Internal usage: Old offer type. Is the current contract model needs to be converted into a new contract type
   * @member {Boolean} isModelMustBeTransmittedInNewContract
   */
  exports.prototype['isModelMustBeTransmittedInNewContract'] = undefined;
  /**
   * @member {module:model/FixedAndVariableClickModelInfo} fixedAndVariableClickInfo
   */
  exports.prototype['fixedAndVariableClickInfo'] = undefined;
  /**
   * @member {module:model/VariableModelInfo} variableModelInfo
   */
  exports.prototype['variableModelInfo'] = undefined;
  /**
   * @member {module:model/PaymentMethod} paymentMethodAuthorized
   */
  exports.prototype['paymentMethodAuthorized'] = undefined;
  /**
   * @member {module:model/CouponOfferCode} couponOfferCode
   */
  exports.prototype['couponOfferCode'] = undefined;
  /**
   * The commercial that is responsible of the creation of your account
   * @member {String} commercialCreatorUserId
   */
  exports.prototype['commercialCreatorUserId'] = undefined;
  /**
   * The minimum billing period in month authorized for this offer.
   * @member {Number} minBillingPeriodInMonths
   */
  exports.prototype['minBillingPeriodInMonths'] = undefined;
  /**
   * If true, this means you want to leave us and that's sad... :'-(
   * @member {Boolean} isCustomerWantsToTerminateHisContract
   */
  exports.prototype['isCustomerWantsToTerminateHisContract'] = undefined;



  return exports;
}));


