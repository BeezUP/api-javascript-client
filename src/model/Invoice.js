/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BeezUPCommonCurrencyCode', 'model/ContractId', 'model/InvoiceNumber', 'model/InvoicePaymentStatus'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BeezUPCommonCurrencyCode'), require('./ContractId'), require('./InvoiceNumber'), require('./InvoicePaymentStatus'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.Invoice = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.BeezUPCommonCurrencyCode, root.BeezUpApi.ContractId, root.BeezUpApi.InvoiceNumber, root.BeezUpApi.InvoicePaymentStatus);
  }
}(this, function(ApiClient, BeezUPCommonCurrencyCode, ContractId, InvoiceNumber, InvoicePaymentStatus) {
  'use strict';




  /**
   * The Invoice model module.
   * @module model/Invoice
   * @version 2.0
   */

  /**
   * Constructs a new <code>Invoice</code>.
   * @alias module:model/Invoice
   * @class
   * @param invoiceDate {Date} The invoice date
   * @param contractId {module:model/ContractId} 
   * @param invoiceNumber {module:model/InvoiceNumber} 
   * @param amount {Number} The amount of your invoice
   * @param amountToBePaid {Number} The remaining amount to be paid for this invoice
   * @param currencyCode {module:model/BeezUPCommonCurrencyCode} 
   * @param paymentStatus {module:model/InvoicePaymentStatus} 
   * @param dueDate {Date} 
   */
  var exports = function(invoiceDate, contractId, invoiceNumber, amount, amountToBePaid, currencyCode, paymentStatus, dueDate) {
    var _this = this;

    _this['invoiceDate'] = invoiceDate;
    _this['contractId'] = contractId;
    _this['invoiceNumber'] = invoiceNumber;
    _this['amount'] = amount;
    _this['amountToBePaid'] = amountToBePaid;
    _this['currencyCode'] = currencyCode;
    _this['paymentStatus'] = paymentStatus;
    _this['dueDate'] = dueDate;

  };

  /**
   * Constructs a <code>Invoice</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Invoice} obj Optional instance to populate.
   * @return {module:model/Invoice} The populated <code>Invoice</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('invoiceDate')) {
        obj['invoiceDate'] = ApiClient.convertToType(data['invoiceDate'], 'Date');
      }
      if (data.hasOwnProperty('contractId')) {
        obj['contractId'] = ContractId.constructFromObject(data['contractId']);
      }
      if (data.hasOwnProperty('invoiceNumber')) {
        obj['invoiceNumber'] = InvoiceNumber.constructFromObject(data['invoiceNumber']);
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('amountToBePaid')) {
        obj['amountToBePaid'] = ApiClient.convertToType(data['amountToBePaid'], 'Number');
      }
      if (data.hasOwnProperty('currencyCode')) {
        obj['currencyCode'] = BeezUPCommonCurrencyCode.constructFromObject(data['currencyCode']);
      }
      if (data.hasOwnProperty('paymentStatus')) {
        obj['paymentStatus'] = InvoicePaymentStatus.constructFromObject(data['paymentStatus']);
      }
      if (data.hasOwnProperty('dueDate')) {
        obj['dueDate'] = ApiClient.convertToType(data['dueDate'], 'Date');
      }
      if (data.hasOwnProperty('invoiceUrl')) {
        obj['invoiceUrl'] = ApiClient.convertToType(data['invoiceUrl'], 'String');
      }
    }
    return obj;
  }

  /**
   * The invoice date
   * @member {Date} invoiceDate
   */
  exports.prototype['invoiceDate'] = undefined;
  /**
   * @member {module:model/ContractId} contractId
   */
  exports.prototype['contractId'] = undefined;
  /**
   * @member {module:model/InvoiceNumber} invoiceNumber
   */
  exports.prototype['invoiceNumber'] = undefined;
  /**
   * The amount of your invoice
   * @member {Number} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * The remaining amount to be paid for this invoice
   * @member {Number} amountToBePaid
   */
  exports.prototype['amountToBePaid'] = undefined;
  /**
   * @member {module:model/BeezUPCommonCurrencyCode} currencyCode
   */
  exports.prototype['currencyCode'] = undefined;
  /**
   * @member {module:model/InvoicePaymentStatus} paymentStatus
   */
  exports.prototype['paymentStatus'] = undefined;
  /**
   * @member {Date} dueDate
   */
  exports.prototype['dueDate'] = undefined;
  /**
   * The url of the invoice document
   * @member {String} invoiceUrl
   */
  exports.prototype['invoiceUrl'] = undefined;



  return exports;
}));


