/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BeezUPCommonStoreId', 'model/Store', 'model/StoreCountryIsoCodeAlpha3', 'model/StoreHeaderLinks', 'model/StoreName', 'model/StoreSectors', 'model/StoreStatus', 'model/StoreUrl', 'model/StoreUserRole'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BeezUPCommonStoreId'), require('./Store'), require('./StoreCountryIsoCodeAlpha3'), require('./StoreHeaderLinks'), require('./StoreName'), require('./StoreSectors'), require('./StoreStatus'), require('./StoreUrl'), require('./StoreUserRole'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.StoreHeader = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.BeezUPCommonStoreId, root.BeezUpApi.Store, root.BeezUpApi.StoreCountryIsoCodeAlpha3, root.BeezUpApi.StoreHeaderLinks, root.BeezUpApi.StoreName, root.BeezUpApi.StoreSectors, root.BeezUpApi.StoreStatus, root.BeezUpApi.StoreUrl, root.BeezUpApi.StoreUserRole);
  }
}(this, function(ApiClient, BeezUPCommonStoreId, Store, StoreCountryIsoCodeAlpha3, StoreHeaderLinks, StoreName, StoreSectors, StoreStatus, StoreUrl, StoreUserRole) {
  'use strict';




  /**
   * The StoreHeader model module.
   * @module model/StoreHeader
   * @version 2.0
   */

  /**
   * Constructs a new <code>StoreHeader</code>.
   * @alias module:model/StoreHeader
   * @class
   * @implements module:model/Store
   * @param name {module:model/StoreName} 
   * @param url {module:model/StoreUrl} 
   * @param countryIsoCodeAlpha3 {module:model/StoreCountryIsoCodeAlpha3} 
   * @param sectors {module:model/StoreSectors} 
   * @param storeId {module:model/BeezUPCommonStoreId} 
   * @param userRole {module:model/StoreUserRole} 
   * @param status {module:model/StoreStatus} 
   * @param ownerUserId {String} The user id of the owner of the store
   * @param shareCount {Number} The share count related to this store
   * @param creationUtcDate {Date} The creation date of the store
   */
  var exports = function(name, url, countryIsoCodeAlpha3, sectors, storeId, userRole, status, ownerUserId, shareCount, creationUtcDate) {
    var _this = this;

    Store.call(_this, name, url, countryIsoCodeAlpha3, sectors);
    _this['storeId'] = storeId;
    _this['userRole'] = userRole;
    _this['status'] = status;
    _this['ownerUserId'] = ownerUserId;
    _this['shareCount'] = shareCount;
    _this['creationUtcDate'] = creationUtcDate;

  };

  /**
   * Constructs a <code>StoreHeader</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/StoreHeader} obj Optional instance to populate.
   * @return {module:model/StoreHeader} The populated <code>StoreHeader</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      Store.constructFromObject(data, obj);
      if (data.hasOwnProperty('storeId')) {
        obj['storeId'] = BeezUPCommonStoreId.constructFromObject(data['storeId']);
      }
      if (data.hasOwnProperty('userRole')) {
        obj['userRole'] = StoreUserRole.constructFromObject(data['userRole']);
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = StoreStatus.constructFromObject(data['status']);
      }
      if (data.hasOwnProperty('ownerUserId')) {
        obj['ownerUserId'] = ApiClient.convertToType(data['ownerUserId'], 'String');
      }
      if (data.hasOwnProperty('shareCount')) {
        obj['shareCount'] = ApiClient.convertToType(data['shareCount'], 'Number');
      }
      if (data.hasOwnProperty('creationUtcDate')) {
        obj['creationUtcDate'] = ApiClient.convertToType(data['creationUtcDate'], 'Date');
      }
      if (data.hasOwnProperty('links')) {
        obj['links'] = StoreHeaderLinks.constructFromObject(data['links']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/BeezUPCommonStoreId} storeId
   */
  exports.prototype['storeId'] = undefined;
  /**
   * @member {module:model/StoreUserRole} userRole
   */
  exports.prototype['userRole'] = undefined;
  /**
   * @member {module:model/StoreStatus} status
   */
  exports.prototype['status'] = undefined;
  /**
   * The user id of the owner of the store
   * @member {String} ownerUserId
   */
  exports.prototype['ownerUserId'] = undefined;
  /**
   * The share count related to this store
   * @member {Number} shareCount
   */
  exports.prototype['shareCount'] = undefined;
  /**
   * The creation date of the store
   * @member {Date} creationUtcDate
   */
  exports.prototype['creationUtcDate'] = undefined;
  /**
   * @member {module:model/StoreHeaderLinks} links
   */
  exports.prototype['links'] = undefined;

  // Implement Store interface:
  /**
   * @member {module:model/StoreName} name
   */
exports.prototype['name'] = undefined;

  /**
   * @member {module:model/StoreUrl} url
   */
exports.prototype['url'] = undefined;

  /**
   * @member {module:model/StoreCountryIsoCodeAlpha3} countryIsoCodeAlpha3
   */
exports.prototype['countryIsoCodeAlpha3'] = undefined;

  /**
   * @member {module:model/StoreSectors} sectors
   */
exports.prototype['sectors'] = undefined;



  return exports;
}));


