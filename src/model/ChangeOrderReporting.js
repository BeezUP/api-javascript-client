/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BeezUPCommonUserId', 'model/BusinessOperationType', 'model/ExecutionUUID', 'model/SourceType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BeezUPCommonUserId'), require('./BusinessOperationType'), require('./ExecutionUUID'), require('./SourceType'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.ChangeOrderReporting = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.BeezUPCommonUserId, root.BeezUpApi.BusinessOperationType, root.BeezUpApi.ExecutionUUID, root.BeezUpApi.SourceType);
  }
}(this, function(ApiClient, BeezUPCommonUserId, BusinessOperationType, ExecutionUUID, SourceType) {
  'use strict';




  /**
   * The ChangeOrderReporting model module.
   * @module model/ChangeOrderReporting
   * @version 2.0
   */

  /**
   * Constructs a new <code>ChangeOrderReporting</code>.
   * The reporting related to a change order operation
   * @alias module:model/ChangeOrderReporting
   * @class
   */
  var exports = function() {
    var _this = this;













  };

  /**
   * Constructs a <code>ChangeOrderReporting</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChangeOrderReporting} obj Optional instance to populate.
   * @return {module:model/ChangeOrderReporting} The populated <code>ChangeOrderReporting</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('executionUUID')) {
        obj['executionUUID'] = ExecutionUUID.constructFromObject(data['executionUUID']);
      }
      if (data.hasOwnProperty('changeOrderType')) {
        obj['changeOrderType'] = BusinessOperationType.constructFromObject(data['changeOrderType']);
      }
      if (data.hasOwnProperty('sourceType')) {
        obj['sourceType'] = SourceType.constructFromObject(data['sourceType']);
      }
      if (data.hasOwnProperty('sourceUserId')) {
        obj['sourceUserId'] = BeezUPCommonUserId.constructFromObject(data['sourceUserId']);
      }
      if (data.hasOwnProperty('sourceUserName')) {
        obj['sourceUserName'] = ApiClient.convertToType(data['sourceUserName'], 'String');
      }
      if (data.hasOwnProperty('creationUtcDate')) {
        obj['creationUtcDate'] = ApiClient.convertToType(data['creationUtcDate'], 'Date');
      }
      if (data.hasOwnProperty('processingStatus')) {
        obj['processingStatus'] = ApiClient.convertToType(data['processingStatus'], 'String');
      }
      if (data.hasOwnProperty('lastUpdateUtcDate')) {
        obj['lastUpdateUtcDate'] = ApiClient.convertToType(data['lastUpdateUtcDate'], 'Date');
      }
      if (data.hasOwnProperty('errorMessage')) {
        obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
      }
      if (data.hasOwnProperty('ipAddress')) {
        obj['ipAddress'] = ApiClient.convertToType(data['ipAddress'], 'String');
      }
      if (data.hasOwnProperty('testMode')) {
        obj['testMode'] = ApiClient.convertToType(data['testMode'], 'Boolean');
      }
      if (data.hasOwnProperty('details')) {
        obj['details'] = ApiClient.convertToType(data['details'], {'String': Object});
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ExecutionUUID} executionUUID
   */
  exports.prototype['executionUUID'] = undefined;
  /**
   * @member {module:model/BusinessOperationType} changeOrderType
   */
  exports.prototype['changeOrderType'] = undefined;
  /**
   * @member {module:model/SourceType} sourceType
   */
  exports.prototype['sourceType'] = undefined;
  /**
   * @member {module:model/BeezUPCommonUserId} sourceUserId
   */
  exports.prototype['sourceUserId'] = undefined;
  /**
   * @member {String} sourceUserName
   */
  exports.prototype['sourceUserName'] = undefined;
  /**
   * The creation UTC date of the execution
   * @member {Date} creationUtcDate
   */
  exports.prototype['creationUtcDate'] = undefined;
  /**
   * The processing status of the execution
   * @member {String} processingStatus
   */
  exports.prototype['processingStatus'] = undefined;
  /**
   * The last update UTC date of the execution
   * @member {Date} lastUpdateUtcDate
   */
  exports.prototype['lastUpdateUtcDate'] = undefined;
  /**
   * The error message during the execution
   * @member {String} errorMessage
   */
  exports.prototype['errorMessage'] = undefined;
  /**
   * The IP address who request this operation
   * @member {String} ipAddress
   */
  exports.prototype['ipAddress'] = undefined;
  /**
   * This operation was a test
   * @member {Boolean} testMode
   */
  exports.prototype['testMode'] = undefined;
  /**
   * @member {Object.<String, Object>} details
   */
  exports.prototype['details'] = undefined;



  return exports;
}));


