/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BeezUPCommonProductBasicInfo', 'model/ChannelCatalogProductInfoLinks', 'model/ExclusionFilterName', 'model/ProductOverridesWithCatalogValues'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BeezUPCommonProductBasicInfo'), require('./ChannelCatalogProductInfoLinks'), require('./ExclusionFilterName'), require('./ProductOverridesWithCatalogValues'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.ChannelCatalogProductInfo = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.BeezUPCommonProductBasicInfo, root.BeezUpApi.ChannelCatalogProductInfoLinks, root.BeezUpApi.ExclusionFilterName, root.BeezUpApi.ProductOverridesWithCatalogValues);
  }
}(this, function(ApiClient, BeezUPCommonProductBasicInfo, ChannelCatalogProductInfoLinks, ExclusionFilterName, ProductOverridesWithCatalogValues) {
  'use strict';




  /**
   * The ChannelCatalogProductInfo model module.
   * @module model/ChannelCatalogProductInfo
   * @version 2.0
   */

  /**
   * Constructs a new <code>ChannelCatalogProductInfo</code>.
   * @alias module:model/ChannelCatalogProductInfo
   * @class
   * @implements module:model/BeezUPCommonProductBasicInfo
   * @param productId {String} The product identifier
   * @param productSku {String} The product SKU
   * @param productTitle {String} The product tile
   * @param productImageUrl {String} The product image Url
   * @param productActive {Boolean} Indicates if the product still exists in your catalog
   * @param overrides {module:model/ProductOverridesWithCatalogValues} 
   * @param disabled {Boolean} Indicates if the product has been disabled or not
   * @param categoryMapped {Boolean} Indicates if the product's category has been mapped to a channel category
   * @param excluded {Boolean} Indicates if the product has been excluded by a exclusion filter
   * @param links {module:model/ChannelCatalogProductInfoLinks} 
   */
  var exports = function(productId, productSku, productTitle, productImageUrl, productActive, overrides, disabled, categoryMapped, excluded, links) {
    var _this = this;

    BeezUPCommonProductBasicInfo.call(_this, productId, productSku, productTitle, productImageUrl, productActive);
    _this['overrides'] = overrides;
    _this['disabled'] = disabled;
    _this['categoryMapped'] = categoryMapped;
    _this['excluded'] = excluded;

    _this['links'] = links;
  };

  /**
   * Constructs a <code>ChannelCatalogProductInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChannelCatalogProductInfo} obj Optional instance to populate.
   * @return {module:model/ChannelCatalogProductInfo} The populated <code>ChannelCatalogProductInfo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      BeezUPCommonProductBasicInfo.constructFromObject(data, obj);
      if (data.hasOwnProperty('overrides')) {
        obj['overrides'] = ProductOverridesWithCatalogValues.constructFromObject(data['overrides']);
      }
      if (data.hasOwnProperty('disabled')) {
        obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
      }
      if (data.hasOwnProperty('categoryMapped')) {
        obj['categoryMapped'] = ApiClient.convertToType(data['categoryMapped'], 'Boolean');
      }
      if (data.hasOwnProperty('excluded')) {
        obj['excluded'] = ApiClient.convertToType(data['excluded'], 'Boolean');
      }
      if (data.hasOwnProperty('excludedBy')) {
        obj['excludedBy'] = ApiClient.convertToType(data['excludedBy'], [ExclusionFilterName]);
      }
      if (data.hasOwnProperty('links')) {
        obj['links'] = ChannelCatalogProductInfoLinks.constructFromObject(data['links']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ProductOverridesWithCatalogValues} overrides
   */
  exports.prototype['overrides'] = undefined;
  /**
   * Indicates if the product has been disabled or not
   * @member {Boolean} disabled
   * @default false
   */
  exports.prototype['disabled'] = false;
  /**
   * Indicates if the product's category has been mapped to a channel category
   * @member {Boolean} categoryMapped
   */
  exports.prototype['categoryMapped'] = undefined;
  /**
   * Indicates if the product has been excluded by a exclusion filter
   * @member {Boolean} excluded
   * @default false
   */
  exports.prototype['excluded'] = false;
  /**
   * @member {Array.<module:model/ExclusionFilterName>} excludedBy
   */
  exports.prototype['excludedBy'] = undefined;
  /**
   * @member {module:model/ChannelCatalogProductInfoLinks} links
   */
  exports.prototype['links'] = undefined;

  // Implement BeezUPCommonProductBasicInfo interface:
  /**
   * The product identifier
   * @member {String} productId
   */
exports.prototype['productId'] = undefined;

  /**
   * The product SKU
   * @member {String} productSku
   */
exports.prototype['productSku'] = undefined;

  /**
   * The product tile
   * @member {String} productTitle
   */
exports.prototype['productTitle'] = undefined;

  /**
   * The product image Url
   * @member {String} productImageUrl
   */
exports.prototype['productImageUrl'] = undefined;

  /**
   * Indicates if the product still exists in your catalog
   * @member {Boolean} productActive
   */
exports.prototype['productActive'] = undefined;



  return exports;
}));


