/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BeezUPCommonCurrencyCode', 'model/TrackedExternalOrderProduct'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BeezUPCommonCurrencyCode'), require('./TrackedExternalOrderProduct'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.TrackedExternalOrder = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.BeezUPCommonCurrencyCode, root.BeezUpApi.TrackedExternalOrderProduct);
  }
}(this, function(ApiClient, BeezUPCommonCurrencyCode, TrackedExternalOrderProduct) {
  'use strict';




  /**
   * The TrackedExternalOrder model module.
   * @module model/TrackedExternalOrder
   * @version 2.0
   */

  /**
   * Constructs a new <code>TrackedExternalOrder</code>.
   * @alias module:model/TrackedExternalOrder
   * @class
   * @param utcDate {Date} The utc date of the external order.
   * @param merchantOrderId {String} The merchant order identifier
   * @param totalAmount {Number} The total amount related to the external order.
   * @param currencyCode {module:model/BeezUPCommonCurrencyCode} 
   * @param paymentValidated {Boolean} Indicate if the payment of this external order has been validated or not.
   */
  var exports = function(utcDate, merchantOrderId, totalAmount, currencyCode, paymentValidated) {
    var _this = this;

    _this['utcDate'] = utcDate;
    _this['merchantOrderId'] = merchantOrderId;

    _this['totalAmount'] = totalAmount;
    _this['currencyCode'] = currencyCode;
    _this['paymentValidated'] = paymentValidated;

  };

  /**
   * Constructs a <code>TrackedExternalOrder</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TrackedExternalOrder} obj Optional instance to populate.
   * @return {module:model/TrackedExternalOrder} The populated <code>TrackedExternalOrder</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('utcDate')) {
        obj['utcDate'] = ApiClient.convertToType(data['utcDate'], 'Date');
      }
      if (data.hasOwnProperty('merchantOrderId')) {
        obj['merchantOrderId'] = ApiClient.convertToType(data['merchantOrderId'], 'String');
      }
      if (data.hasOwnProperty('visitorId')) {
        obj['visitorId'] = ApiClient.convertToType(data['visitorId'], 'String');
      }
      if (data.hasOwnProperty('totalAmount')) {
        obj['totalAmount'] = ApiClient.convertToType(data['totalAmount'], 'Number');
      }
      if (data.hasOwnProperty('currencyCode')) {
        obj['currencyCode'] = BeezUPCommonCurrencyCode.constructFromObject(data['currencyCode']);
      }
      if (data.hasOwnProperty('paymentValidated')) {
        obj['paymentValidated'] = ApiClient.convertToType(data['paymentValidated'], 'Boolean');
      }
      if (data.hasOwnProperty('products')) {
        obj['products'] = ApiClient.convertToType(data['products'], [TrackedExternalOrderProduct]);
      }
    }
    return obj;
  }

  /**
   * The utc date of the external order.
   * @member {Date} utcDate
   */
  exports.prototype['utcDate'] = undefined;
  /**
   * The merchant order identifier
   * @member {String} merchantOrderId
   */
  exports.prototype['merchantOrderId'] = undefined;
  /**
   * Can be null. The visitor identifier related to this external order
   * @member {String} visitorId
   */
  exports.prototype['visitorId'] = undefined;
  /**
   * The total amount related to the external order.
   * @member {Number} totalAmount
   */
  exports.prototype['totalAmount'] = undefined;
  /**
   * @member {module:model/BeezUPCommonCurrencyCode} currencyCode
   */
  exports.prototype['currencyCode'] = undefined;
  /**
   * Indicate if the payment of this external order has been validated or not.
   * @member {Boolean} paymentValidated
   */
  exports.prototype['paymentValidated'] = undefined;
  /**
   * Can be null. the product list related to this external order.
   * @member {Array.<module:model/TrackedExternalOrderProduct>} products
   */
  exports.prototype['products'] = undefined;



  return exports;
}));


