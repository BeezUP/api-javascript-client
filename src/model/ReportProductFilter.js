/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ReportProductFilterOperatorName'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ReportProductFilterOperatorName'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.ReportProductFilter = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.ReportProductFilterOperatorName);
  }
}(this, function(ApiClient, ReportProductFilterOperatorName) {
  'use strict';




  /**
   * The ReportProductFilter model module.
   * @module model/ReportProductFilter
   * @version 2.0
   */

  /**
   * Constructs a new <code>ReportProductFilter</code>.
   * Describe a filter on a product&#39;s column
   * @alias module:model/ReportProductFilter
   * @class
   * @param columnId {String} The column identifier of your catalog or a custom column.
   * @param operatorName {module:model/ReportProductFilterOperatorName} 
   */
  var exports = function(columnId, operatorName) {
    var _this = this;

    _this['columnId'] = columnId;
    _this['operatorName'] = operatorName;

  };

  /**
   * Constructs a <code>ReportProductFilter</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ReportProductFilter} obj Optional instance to populate.
   * @return {module:model/ReportProductFilter} The populated <code>ReportProductFilter</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('columnId')) {
        obj['columnId'] = ApiClient.convertToType(data['columnId'], 'String');
      }
      if (data.hasOwnProperty('operatorName')) {
        obj['operatorName'] = ReportProductFilterOperatorName.constructFromObject(data['operatorName']);
      }
      if (data.hasOwnProperty('values')) {
        obj['values'] = ApiClient.convertToType(data['values'], ['String']);
      }
    }
    return obj;
  }

  /**
   * The column identifier of your catalog or a custom column.
   * @member {String} columnId
   */
  exports.prototype['columnId'] = undefined;
  /**
   * @member {module:model/ReportProductFilterOperatorName} operatorName
   */
  exports.prototype['operatorName'] = undefined;
  /**
   * Must be null if the operator is \"IsNull\" or \"IsNotNull\". Can contains multiple value in case of \"InList\" operator. Otherwise a single value is expected.
   * @member {Array.<String>} values
   */
  exports.prototype['values'] = undefined;



  return exports;
}));


