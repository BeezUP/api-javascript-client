/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.ChannelCatalogExportCacheInfo = factory(root.BeezUpApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ChannelCatalogExportCacheInfo model module.
   * @module model/ChannelCatalogExportCacheInfo
   * @version 2.0
   */

  /**
   * Constructs a new <code>ChannelCatalogExportCacheInfo</code>.
   * @alias module:model/ChannelCatalogExportCacheInfo
   * @class
   * @param cacheStatus {String} The cache status
   */
  var exports = function(cacheStatus) {
    var _this = this;

    _this['cacheStatus'] = cacheStatus;




  };

  /**
   * Constructs a <code>ChannelCatalogExportCacheInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChannelCatalogExportCacheInfo} obj Optional instance to populate.
   * @return {module:model/ChannelCatalogExportCacheInfo} The populated <code>ChannelCatalogExportCacheInfo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('cacheStatus')) {
        obj['cacheStatus'] = ApiClient.convertToType(data['cacheStatus'], 'String');
      }
      if (data.hasOwnProperty('lastUpdateUtcDate')) {
        obj['lastUpdateUtcDate'] = ApiClient.convertToType(data['lastUpdateUtcDate'], 'Date');
      }
      if (data.hasOwnProperty('lastContentChangeUtcDate')) {
        obj['lastContentChangeUtcDate'] = ApiClient.convertToType(data['lastContentChangeUtcDate'], 'Date');
      }
      if (data.hasOwnProperty('expirationUtcDate')) {
        obj['expirationUtcDate'] = ApiClient.convertToType(data['expirationUtcDate'], 'Date');
      }
      if (data.hasOwnProperty('feedUrl')) {
        obj['feedUrl'] = ApiClient.convertToType(data['feedUrl'], 'String');
      }
    }
    return obj;
  }

  /**
   * The cache status
   * @member {String} cacheStatus
   */
  exports.prototype['cacheStatus'] = undefined;
  /**
   * The last update UTC date of the cache
   * @member {Date} lastUpdateUtcDate
   */
  exports.prototype['lastUpdateUtcDate'] = undefined;
  /**
   * The last content change UTC date
   * @member {Date} lastContentChangeUtcDate
   */
  exports.prototype['lastContentChangeUtcDate'] = undefined;
  /**
   * The expiration UTC date of the cache
   * @member {Date} expirationUtcDate
   */
  exports.prototype['expirationUtcDate'] = undefined;
  /**
   * The feed url
   * @member {String} feedUrl
   */
  exports.prototype['feedUrl'] = undefined;



  return exports;
}));


