/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ContractBillingPeriodInfo', 'model/ContractBonusInfo', 'model/ContractClickInfo', 'model/ContractCommitmentInfo', 'model/ContractDiscountInfo', 'model/ContractMoneyInfo', 'model/ContractStoreInfo', 'model/ContractTerminationReason', 'model/ContractTerminationReasonType', 'model/PreviousFixPeriodInvoiceProrataInfo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ContractBillingPeriodInfo'), require('./ContractBonusInfo'), require('./ContractClickInfo'), require('./ContractCommitmentInfo'), require('./ContractDiscountInfo'), require('./ContractMoneyInfo'), require('./ContractStoreInfo'), require('./ContractTerminationReason'), require('./ContractTerminationReasonType'), require('./PreviousFixPeriodInvoiceProrataInfo'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.OfferContent = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.ContractBillingPeriodInfo, root.BeezUpApi.ContractBonusInfo, root.BeezUpApi.ContractClickInfo, root.BeezUpApi.ContractCommitmentInfo, root.BeezUpApi.ContractDiscountInfo, root.BeezUpApi.ContractMoneyInfo, root.BeezUpApi.ContractStoreInfo, root.BeezUpApi.ContractTerminationReason, root.BeezUpApi.ContractTerminationReasonType, root.BeezUpApi.PreviousFixPeriodInvoiceProrataInfo);
  }
}(this, function(ApiClient, ContractBillingPeriodInfo, ContractBonusInfo, ContractClickInfo, ContractCommitmentInfo, ContractDiscountInfo, ContractMoneyInfo, ContractStoreInfo, ContractTerminationReason, ContractTerminationReasonType, PreviousFixPeriodInvoiceProrataInfo) {
  'use strict';




  /**
   * The OfferContent model module.
   * @module model/OfferContent
   * @version 2.0
   */

  /**
   * Constructs a new <code>OfferContent</code>.
   * @alias module:model/OfferContent
   * @class
   * @param previousFixPeriodInvoiceProrataInfo {module:model/PreviousFixPeriodInvoiceProrataInfo} 
   * @param contractBillingPeriodInfo {module:model/ContractBillingPeriodInfo} 
   * @param contractClickInfo {module:model/ContractClickInfo} 
   * @param contractCommitmentInfo {module:model/ContractCommitmentInfo} 
   * @param contractDiscountInfo {module:model/ContractDiscountInfo} 
   * @param contractMoneyInfo {module:model/ContractMoneyInfo} 
   * @param contractStoreInfo {module:model/ContractStoreInfo} 
   * @param contractBonusInfo {module:model/ContractBonusInfo} 
   * @param notifyVatExemption {Boolean} Internal usage: Indicates if we have to notify you about VAT exemption.
   */
  var exports = function(previousFixPeriodInvoiceProrataInfo, contractBillingPeriodInfo, contractClickInfo, contractCommitmentInfo, contractDiscountInfo, contractMoneyInfo, contractStoreInfo, contractBonusInfo, notifyVatExemption) {
    var _this = this;

    _this['previousFixPeriodInvoiceProrataInfo'] = previousFixPeriodInvoiceProrataInfo;
    _this['contractBillingPeriodInfo'] = contractBillingPeriodInfo;
    _this['contractClickInfo'] = contractClickInfo;
    _this['contractCommitmentInfo'] = contractCommitmentInfo;
    _this['contractDiscountInfo'] = contractDiscountInfo;
    _this['contractMoneyInfo'] = contractMoneyInfo;
    _this['contractStoreInfo'] = contractStoreInfo;
    _this['contractBonusInfo'] = contractBonusInfo;


    _this['notifyVatExemption'] = notifyVatExemption;
  };

  /**
   * Constructs a <code>OfferContent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OfferContent} obj Optional instance to populate.
   * @return {module:model/OfferContent} The populated <code>OfferContent</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('previousFixPeriodInvoiceProrataInfo')) {
        obj['previousFixPeriodInvoiceProrataInfo'] = PreviousFixPeriodInvoiceProrataInfo.constructFromObject(data['previousFixPeriodInvoiceProrataInfo']);
      }
      if (data.hasOwnProperty('contractBillingPeriodInfo')) {
        obj['contractBillingPeriodInfo'] = ContractBillingPeriodInfo.constructFromObject(data['contractBillingPeriodInfo']);
      }
      if (data.hasOwnProperty('contractClickInfo')) {
        obj['contractClickInfo'] = ContractClickInfo.constructFromObject(data['contractClickInfo']);
      }
      if (data.hasOwnProperty('contractCommitmentInfo')) {
        obj['contractCommitmentInfo'] = ContractCommitmentInfo.constructFromObject(data['contractCommitmentInfo']);
      }
      if (data.hasOwnProperty('contractDiscountInfo')) {
        obj['contractDiscountInfo'] = ContractDiscountInfo.constructFromObject(data['contractDiscountInfo']);
      }
      if (data.hasOwnProperty('contractMoneyInfo')) {
        obj['contractMoneyInfo'] = ContractMoneyInfo.constructFromObject(data['contractMoneyInfo']);
      }
      if (data.hasOwnProperty('contractStoreInfo')) {
        obj['contractStoreInfo'] = ContractStoreInfo.constructFromObject(data['contractStoreInfo']);
      }
      if (data.hasOwnProperty('contractBonusInfo')) {
        obj['contractBonusInfo'] = ContractBonusInfo.constructFromObject(data['contractBonusInfo']);
      }
      if (data.hasOwnProperty('contractTerminationReasonType')) {
        obj['contractTerminationReasonType'] = ContractTerminationReasonType.constructFromObject(data['contractTerminationReasonType']);
      }
      if (data.hasOwnProperty('contractTerminationReason')) {
        obj['contractTerminationReason'] = ContractTerminationReason.constructFromObject(data['contractTerminationReason']);
      }
      if (data.hasOwnProperty('notifyVatExemption')) {
        obj['notifyVatExemption'] = ApiClient.convertToType(data['notifyVatExemption'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/PreviousFixPeriodInvoiceProrataInfo} previousFixPeriodInvoiceProrataInfo
   */
  exports.prototype['previousFixPeriodInvoiceProrataInfo'] = undefined;
  /**
   * @member {module:model/ContractBillingPeriodInfo} contractBillingPeriodInfo
   */
  exports.prototype['contractBillingPeriodInfo'] = undefined;
  /**
   * @member {module:model/ContractClickInfo} contractClickInfo
   */
  exports.prototype['contractClickInfo'] = undefined;
  /**
   * @member {module:model/ContractCommitmentInfo} contractCommitmentInfo
   */
  exports.prototype['contractCommitmentInfo'] = undefined;
  /**
   * @member {module:model/ContractDiscountInfo} contractDiscountInfo
   */
  exports.prototype['contractDiscountInfo'] = undefined;
  /**
   * @member {module:model/ContractMoneyInfo} contractMoneyInfo
   */
  exports.prototype['contractMoneyInfo'] = undefined;
  /**
   * @member {module:model/ContractStoreInfo} contractStoreInfo
   */
  exports.prototype['contractStoreInfo'] = undefined;
  /**
   * @member {module:model/ContractBonusInfo} contractBonusInfo
   */
  exports.prototype['contractBonusInfo'] = undefined;
  /**
   * @member {module:model/ContractTerminationReasonType} contractTerminationReasonType
   */
  exports.prototype['contractTerminationReasonType'] = undefined;
  /**
   * @member {module:model/ContractTerminationReason} contractTerminationReason
   */
  exports.prototype['contractTerminationReason'] = undefined;
  /**
   * Internal usage: Indicates if we have to notify you about VAT exemption.
   * @member {Boolean} notifyVatExemption
   */
  exports.prototype['notifyVatExemption'] = undefined;



  return exports;
}));


