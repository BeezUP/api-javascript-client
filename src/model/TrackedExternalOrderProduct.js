/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.TrackedExternalOrderProduct = factory(root.BeezUpApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The TrackedExternalOrderProduct model module.
   * @module model/TrackedExternalOrderProduct
   * @version 2.0
   */

  /**
   * Constructs a new <code>TrackedExternalOrderProduct</code>.
   * @alias module:model/TrackedExternalOrderProduct
   * @class
   * @param productSku {String} The product sku received related to the external order.
   */
  var exports = function(productSku) {
    var _this = this;

    _this['productSku'] = productSku;







  };

  /**
   * Constructs a <code>TrackedExternalOrderProduct</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TrackedExternalOrderProduct} obj Optional instance to populate.
   * @return {module:model/TrackedExternalOrderProduct} The populated <code>TrackedExternalOrderProduct</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('productSku')) {
        obj['productSku'] = ApiClient.convertToType(data['productSku'], 'String');
      }
      if (data.hasOwnProperty('productTitle')) {
        obj['productTitle'] = ApiClient.convertToType(data['productTitle'], 'String');
      }
      if (data.hasOwnProperty('productImageUrl')) {
        obj['productImageUrl'] = ApiClient.convertToType(data['productImageUrl'], 'String');
      }
      if (data.hasOwnProperty('productActive')) {
        obj['productActive'] = ApiClient.convertToType(data['productActive'], 'Boolean');
      }
      if (data.hasOwnProperty('productId')) {
        obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
      }
      if (data.hasOwnProperty('unitPrice')) {
        obj['unitPrice'] = ApiClient.convertToType(data['unitPrice'], 'String');
      }
      if (data.hasOwnProperty('quantity')) {
        obj['quantity'] = ApiClient.convertToType(data['quantity'], 'String');
      }
      if (data.hasOwnProperty('margin')) {
        obj['margin'] = ApiClient.convertToType(data['margin'], 'String');
      }
    }
    return obj;
  }

  /**
   * The product sku received related to the external order.
   * @member {String} productSku
   */
  exports.prototype['productSku'] = undefined;
  /**
   * We tried to get the catalog product title based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.
   * @member {String} productTitle
   */
  exports.prototype['productTitle'] = undefined;
  /**
   * We tried to get the catalog product image Url based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.
   * @member {String} productImageUrl
   */
  exports.prototype['productImageUrl'] = undefined;
  /**
   * We tried to get the catalog product if it's still active based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.
   * @member {Boolean} productActive
   */
  exports.prototype['productActive'] = undefined;
  /**
   * We tried to get the catalog product identifier based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.
   * @member {String} productId
   */
  exports.prototype['productId'] = undefined;
  /**
   * The product's unit price related to this external order. This property is voluntarily a string because the value could be an invalid one.
   * @member {String} unitPrice
   */
  exports.prototype['unitPrice'] = undefined;
  /**
   * Indicate the product's quantity ordered. This property is voluntarily a string because the value could be an invalid one
   * @member {String} quantity
   */
  exports.prototype['quantity'] = undefined;
  /**
   * Indicate the product's margin related to this order. This property is voluntarily a string because the value could be an invalid one
   * @member {String} margin
   */
  exports.prototype['margin'] = undefined;



  return exports;
}));


