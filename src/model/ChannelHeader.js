/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BeezUPCommonChannelId', 'model/BeezUPCommonChannelName', 'model/BeezUPCommonHttpUrl', 'model/ChannelHeaderLinks'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BeezUPCommonChannelId'), require('./BeezUPCommonChannelName'), require('./BeezUPCommonHttpUrl'), require('./ChannelHeaderLinks'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.ChannelHeader = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.BeezUPCommonChannelId, root.BeezUpApi.BeezUPCommonChannelName, root.BeezUpApi.BeezUPCommonHttpUrl, root.BeezUpApi.ChannelHeaderLinks);
  }
}(this, function(ApiClient, BeezUPCommonChannelId, BeezUPCommonChannelName, BeezUPCommonHttpUrl, ChannelHeaderLinks) {
  'use strict';




  /**
   * The ChannelHeader model module.
   * @module model/ChannelHeader
   * @version 2.0
   */

  /**
   * Constructs a new <code>ChannelHeader</code>.
   * The available channel
   * @alias module:model/ChannelHeader
   * @class
   * @param channelId {module:model/BeezUPCommonChannelId} 
   * @param channelName {module:model/BeezUPCommonChannelName} 
   * @param channelLogoUrl {module:model/BeezUPCommonHttpUrl} 
   * @param descriptionAvailable {Boolean} Indicates if we have more detailed information about this channel
   * @param isMarketplace {Boolean} Indicates if the channel is a marketplace
   * @param links {module:model/ChannelHeaderLinks} 
   */
  var exports = function(channelId, channelName, channelLogoUrl, descriptionAvailable, isMarketplace, links) {
    var _this = this;

    _this['channelId'] = channelId;
    _this['channelName'] = channelName;
    _this['channelLogoUrl'] = channelLogoUrl;
    _this['descriptionAvailable'] = descriptionAvailable;
    _this['isMarketplace'] = isMarketplace;
    _this['links'] = links;
  };

  /**
   * Constructs a <code>ChannelHeader</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChannelHeader} obj Optional instance to populate.
   * @return {module:model/ChannelHeader} The populated <code>ChannelHeader</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('channelId')) {
        obj['channelId'] = BeezUPCommonChannelId.constructFromObject(data['channelId']);
      }
      if (data.hasOwnProperty('channelName')) {
        obj['channelName'] = BeezUPCommonChannelName.constructFromObject(data['channelName']);
      }
      if (data.hasOwnProperty('channelLogoUrl')) {
        obj['channelLogoUrl'] = BeezUPCommonHttpUrl.constructFromObject(data['channelLogoUrl']);
      }
      if (data.hasOwnProperty('descriptionAvailable')) {
        obj['descriptionAvailable'] = ApiClient.convertToType(data['descriptionAvailable'], 'Boolean');
      }
      if (data.hasOwnProperty('isMarketplace')) {
        obj['isMarketplace'] = ApiClient.convertToType(data['isMarketplace'], 'Boolean');
      }
      if (data.hasOwnProperty('links')) {
        obj['links'] = ChannelHeaderLinks.constructFromObject(data['links']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/BeezUPCommonChannelId} channelId
   */
  exports.prototype['channelId'] = undefined;
  /**
   * @member {module:model/BeezUPCommonChannelName} channelName
   */
  exports.prototype['channelName'] = undefined;
  /**
   * @member {module:model/BeezUPCommonHttpUrl} channelLogoUrl
   */
  exports.prototype['channelLogoUrl'] = undefined;
  /**
   * Indicates if we have more detailed information about this channel
   * @member {Boolean} descriptionAvailable
   * @default false
   */
  exports.prototype['descriptionAvailable'] = false;
  /**
   * Indicates if the channel is a marketplace
   * @member {Boolean} isMarketplace
   * @default false
   */
  exports.prototype['isMarketplace'] = false;
  /**
   * @member {module:model/ChannelHeaderLinks} links
   */
  exports.prototype['links'] = undefined;



  return exports;
}));


