/**
 * BeezUP API
 * This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 
 *
 * OpenAPI spec version: 2.0
 * Contact: support@beezup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AlertId', 'model/AlertIsActive', 'model/AlertName', 'model/StoreAlertLinks', 'model/StoreAlertPropertyInfo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AlertId'), require('./AlertIsActive'), require('./AlertName'), require('./StoreAlertLinks'), require('./StoreAlertPropertyInfo'));
  } else {
    // Browser globals (root is window)
    if (!root.BeezUpApi) {
      root.BeezUpApi = {};
    }
    root.BeezUpApi.StoreAlert = factory(root.BeezUpApi.ApiClient, root.BeezUpApi.AlertId, root.BeezUpApi.AlertIsActive, root.BeezUpApi.AlertName, root.BeezUpApi.StoreAlertLinks, root.BeezUpApi.StoreAlertPropertyInfo);
  }
}(this, function(ApiClient, AlertId, AlertIsActive, AlertName, StoreAlertLinks, StoreAlertPropertyInfo) {
  'use strict';




  /**
   * The StoreAlert model module.
   * @module model/StoreAlert
   * @version 2.0
   */

  /**
   * Constructs a new <code>StoreAlert</code>.
   * @alias module:model/StoreAlert
   * @class
   * @param alertId {module:model/AlertId} 
   * @param alertName {module:model/AlertName} 
   * @param active {module:model/AlertIsActive} 
   */
  var exports = function(alertId, alertName, active) {
    var _this = this;


    _this['alertId'] = alertId;
    _this['alertName'] = alertName;
    _this['active'] = active;

  };

  /**
   * Constructs a <code>StoreAlert</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/StoreAlert} obj Optional instance to populate.
   * @return {module:model/StoreAlert} The populated <code>StoreAlert</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('links')) {
        obj['links'] = StoreAlertLinks.constructFromObject(data['links']);
      }
      if (data.hasOwnProperty('alertId')) {
        obj['alertId'] = AlertId.constructFromObject(data['alertId']);
      }
      if (data.hasOwnProperty('alertName')) {
        obj['alertName'] = AlertName.constructFromObject(data['alertName']);
      }
      if (data.hasOwnProperty('active')) {
        obj['active'] = AlertIsActive.constructFromObject(data['active']);
      }
      if (data.hasOwnProperty('properties')) {
        obj['properties'] = ApiClient.convertToType(data['properties'], [StoreAlertPropertyInfo]);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/StoreAlertLinks} links
   */
  exports.prototype['links'] = undefined;
  /**
   * @member {module:model/AlertId} alertId
   */
  exports.prototype['alertId'] = undefined;
  /**
   * @member {module:model/AlertName} alertName
   */
  exports.prototype['alertName'] = undefined;
  /**
   * @member {module:model/AlertIsActive} active
   */
  exports.prototype['active'] = undefined;
  /**
   * The current configuration properties of the alert
   * @member {Array.<module:model/StoreAlertPropertyInfo>} properties
   */
  exports.prototype['properties'] = undefined;



  return exports;
}));


